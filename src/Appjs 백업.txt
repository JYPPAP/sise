import React from 'react';
import {
  SafeAreaView,
  ScrollView,
  StatusBar,
  StyleSheet,
  Text,
  useColorScheme,
  View,
} from 'react-native';

// import {
//   Colors,
//   DebugInstructions,
//   Header,
//   LearnMoreLinks,
//   ReloadInstructions,
// } from 'react-native/Libraries/NewAppScreen';

// const Section = ({children, title}) => {
//   const isDarkMode = useColorScheme() === 'dark';
//   return (
//     <View style={styles.sectionContainer}>
//       <Text
//         style={[
//           styles.sectionTitle,
//           {
//             color: isDarkMode ? Colors.white : Colors.black,
//           },
//         ]}>
//         {title}
//       </Text>
//       <Text
//         style={[
//           styles.sectionDescription,
//           {
//             color: isDarkMode ? Colors.light : Colors.dark,
//           },
//         ]}>
//         {children}
//       </Text>
//     </View>
//   );
// };

const App = () => {
  // const isDarkMode = useColorScheme() === 'dark';

  // const backgroundStyle = {
  //   backgroundColor: isDarkMode ? Colors.darker : Colors.lighter,
  // };

  // <SafeAreaView style={backgroundStyle}>
  //   <StatusBar barStyle={isDarkMode ? 'light-content' : 'dark-content'} />
  //   <ScrollView
  //     contentInsetAdjustmentBehavior="automatic"
  //     style={backgroundStyle}>
  //     <Header />
  //     <View
  //       style={{
  //         backgroundColor: isDarkMode ? Colors.black : Colors.white,
  //       }}>
  //       <Section title="Step One">
  //         Edit <Text style={styles.highlight}>App.js</Text> to change this
  //         screen and then come back to see your edits.
  //       </Section>
  //       <Section title="See Your Changes">
  //         <ReloadInstructions />
  //       </Section>
  //       <Section title="Debug">
  //         <DebugInstructions />
  //       </Section>
  //       <Section title="Learn More">
  //         Read the docs to discover what to do next:
  //       </Section>
  //       <LearnMoreLinks />
  //     </View>
  //   </ScrollView>
  // </SafeAreaView>
  return (
    <View>
      <Text>App이 렌더링 되었습니다.</Text>
    </View>
  );
};

// const styles = StyleSheet.create({
//   sectionContainer: {
//     marginTop: 32,
//     paddingHorizontal: 24,
//   },
//   sectionTitle: {
//     fontSize: 24,
//     fontWeight: '600',
//   },
//   sectionDescription: {
//     marginTop: 8,
//     fontSize: 18,
//     fontWeight: '400',
//   },
//   highlight: {
//     fontWeight: '700',
//   },
// });

export default App;
###########################
BK 2
###########################
// import React from 'react';
// import {
//   SafeAreaView,
//   ScrollView,
//   StatusBar,
//   StyleSheet,
//   Text,
//   View,
// } from 'react-native';


// const Home = () => <Text style={styles.header}>Home</Text>;

// const About = () => <Text style={styles.header}>About</Text>;

// const Topic = ({match}) => (
//   <Text style={styles.topic}>{match.params.topicId}</Text>
// );

// const Topics = ({match}) => (
//   <View>
//     <Text style={styles.header}>Topics</Text>
//     <View>
//       <Link
//         to={`${match.url}/rendering`}
//         style={styles.subNavItem}
//         underlayColor="#f0f4f7">
//         <Text>Rendering with React</Text>
//       </Link>
//       <Link
//         to={`${match.url}/components`}
//         style={styles.subNavItem}
//         underlayColor="#f0f4f7">
//         <Text>Components</Text>
//       </Link>
//       <Link
//         to={`${match.url}/props-v-state`}
//         style={styles.subNavItem}
//         underlayColor="#f0f4f7">
//         <Text>Props v. State</Text>
//       </Link>
//     </View>

//     <Route path={`${match.path}/:topicId`} component={Topic} />
//     <Route
//       exact
//       path={match.path}
//       render={() => <Text style={styles.topic}>Please select a topic.</Text>}
//     />
//   </View>
// );

// const App = () => (
//   <NativeRouter>
//     <View style={styles.container}>
//       <View style={styles.nav}>
//         <Link to="/" underlayColor="#f0f4f7" style={styles.navItem}>
//           <Text>Home</Text>
//         </Link>
//         <Link to="/about" underlayColor="#f0f4f7" style={styles.navItem}>
//           <Text>About</Text>
//         </Link>
//         <Link to="/topics" underlayColor="#f0f4f7" style={styles.navItem}>
//           <Text>Topics</Text>
//         </Link>
//       </View>
//       <Routes>
//         <Route exact path="/" element={Home} />
//         <Route path="/about" element={About} />
//         <Route path="/topics" element={Topics} />
//       </Routes>
//     </View>
//   </NativeRouter>
// );

const App = () => {
  // const [loading, setLoading] = useState(true);
  const [loading, setLoading] = useState(false);
  const [tab, setTab] = useState("home");

  setInterval(() => {
    setLoading(false);
  }, 2000);

  if (loading) {
    return <Loading />;
  }

  return (
    <Routes>
      <Route path="/" element={<HeaderTop />}>
        <Route index element={<Main />} />
        <Route path="/games/:gameName" element={<Games />} />
        <Route path="/games/:gameName/servers/:serverName" element={<Servers />} />
        <Route path="/settings" element={<Settings />} />
        <Route path="/privateInfo" element={<PrivateInfo />} />
        <Route
          path="*"
          element={
            <Text className="page404" children="There is Nothing Here!" />
          }
        />
      </Route>
    </Routes>
  );
};

export default App;

// const styles = StyleSheet.create({
//   container: {
//     marginTop: 25,
//     padding: 10,
//   },
//   header: {
//     fontSize: 20,
//   },
//   nav: {
//     flexDirection: 'row',
//     justifyContent: 'space-around',
//   },
//   navItem: {
//     flex: 1,
//     alignItems: 'center',
//     padding: 10,
//   },
//   subNavItem: {
//     padding: 5,
//   },
//   topic: {
//     textAlign: 'center',
//     fontSize: 15,
//   },
// });
